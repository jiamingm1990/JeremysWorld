var curves=function(){var i={},t=[];function n(i){return void 0===i}function o(){var i=this.config,t=i.context;if(n(i))throw"Could not find config in this scope!";if(n(t))throw"Could not find context in this.config!"}function e(){this.isConfigured=!1,this.config={},this.drawParametric=function(i,t){var n=t.bind(this)(this.config.startT);i.beginPath(),i.moveTo(n.x,-n.y);for(var o=1;o<=this.config.tCount;++o){var e=t.bind(this)((this.config.endT-this.config.startT)/this.config.tCount*o);i.lineTo(e.x,-e.y)}i.stroke(),i.closePath()},this.drawRectangular=function(i,t){var n=t.bind(this)(this.config.startX)+this.config.deltaY;i.beginPath(),this.config.reverse?i.moveTo(-n,this.config.startX):i.moveTo(this.config.startX,-n);for(var o=1;o<=this.config.xCount;++o){var e=this.config.startX+(this.config.endX-this.config.startX)/this.config.xCount*o,s=t.bind(this)(e)+this.config.deltaY;this.config.reverse?i.lineTo(-s,e):i.lineTo(e,-s)}i.stroke(),i.closePath()}}function s(){this.isConfigured=!1,this.config={},this.shapes={},this.shapeIdQueue=[],this.shapeCount=0}e.prototype.configure=function(i){if(n(i)&&(this.config={}),this.config=i,n(i.type)&&(this.config.type="parametric"),"parametric"===this.config.type)n(this.config.startT)&&(this.config.startT=0),n(this.config.endT)&&(this.config.endT=2*Math.PI),n(this.config.tCount)&&(this.config.tCount=500);else if("rectangular"===this.config.type)n(this.config.startX)&&(this.config.startX=-200),n(this.config.endX)&&(this.config.endX=200),n(this.config.xCount)&&(this.config.xCount=1e3),n(this.config.reverse)&&(this.config.reverse=!1),n(this.config.deltaY)&&(this.config.deltaY=0);else{if("original"!==this.config.type)throw"config.type must be parametric, rectangular or original!";n(this.config.strokeStyle)&&(this.config.strokeStyle="#000000"),n(this.config.fillStyle)&&(this.config.fillStyle="#000000")}this.isConfigured=!0},e.prototype.draw=function(i,t){if(!this.isConfigured)throw"painter.configure must be called before this function.";"original"===this.config.type?(this.config.context=i,t.bind(this)()):"parametric"===this.config.type?this.drawParametric.bind(this)(i,t):this.drawRectangular.bind(this)(i,t)},e.point=function(){var i=this.config,t=i.context;o.bind(this)(),n(i.x)&&(i.x=0),n(i.y)&&(i.y=0),n(i.size)&&(i.size=1),n(i.strokeStyle)&&(i.strokeStyle="#000000"),n(i.fillStyle)&&(i.fillStyle="#000000"),t.beginPath(),t.strokeStyle=i.strokeStyle,t.fillStyle=i.fillStyle,t.arc(i.x,i.y,i.size,0,2*Math.PI),t.stroke(),t.fill(),t.closePath()},e.circle=function(){var i=this.config,t=i.context;o.bind(this)(),n(i.x)&&(i.x=0),n(i.y)&&(i.y=0),n(i.radius)&&(i.radius=100),n(i.strokeStyle)&&(i.strokeStyle="#000000"),t.beginPath(),t.strokeStyle=i.strokeStyle,t.arc(i.x,i.y,i.radius,0,2*Math.PI),t.stroke(),t.closePath()},e.arrow=function(){var i=this.config,t=i.context;o.bind(this)(),n(i.start)&&(i.start={x:0,y:0}),n(i.end)&&(i.end={x:100,y:0}),n(i.radius)&&(i.radius=100),n(i.strokeStyle)&&(i.strokeStyle="#000000"),t.beginPath(),t.strokeStyle=i.strokeStyle,t.moveTo(i.start.x,-i.start.y),t.lineTo(i.end.x,-i.end.y),t.stroke(),t.closePath(),i.size=4,i.x=i.end.x,i.y=-i.end.y,e.point.bind(this)()},e.cardioid=function(i){if(!n(this.config))var t=this.config.radius,o=this.config.alpha,e=this.config.ratio;return n(t)&&(t=100),n(o)&&(o=0),n(e)&&(e=1),{x:t*e*Math.cos(i-o)-2*t*Math.cos(i/2),y:-t*e*Math.sin(i-o)+2*t*Math.sin(i/2)}},e.arc=function(i){if(!n(this.config))var t=this.config.radius,o=this.config.period,e=this.config.alpha;return n(t)&&(t=100),n(o)&&(o=1),n(e)&&(e=0),{x:t*Math.cos(o*i+e),y:-t*Math.sin(o*i+e)}},e.sin=function(i){if(!n(this.config))var t=this.config.radius,o=this.config.period,e=this.config.alpha;return n(t)&&(t=100),n(o)&&(o=1),n(e)&&(e=0),t*Math.sin(o*i+e)},s.prototype.getPainter=function(){return{configure:s.prototype.configureShape,draw:s.prototype.drawShape,context:this.config.context,config:this.config,shape:{point:e.point,circle:e.circle,arrow:e.arrow,cardioid:e.cardioid,arc:e.arc,sin:e.sin}}},s.prototype.configureShape=function(t){var n=i[this.config.id],o="shape"+ ++n.shapeCount;return n.shapes[o]=new e,n.shapeIdQueue.push(o),n.shapes[o].configure(t),this},s.prototype.drawShape=function(t){var n=i[this.config.id];n.shapeIdQueue.length>0&&n.shapes[n.shapeIdQueue.shift()].draw(this.context,t)},s.prototype.clear=function(){this.config.context.clearRect(-this.config.canvas.width/2,-this.config.canvas.height/2,this.config.canvas.width,this.config.canvas.height);var i=this;Object.keys(this.shapes).forEach(function(t){i.shapes[t]=null}),this.shapes=null,this.shapes={},this.shapeIdQueue=[],this.shapeCount=0},s.prototype.animate=function(i){if(i>this.config.endPeriod){if(!this.config.loop)return;i=this.config.startPeriod}this.clear.bind(this)(),this.config.paint(this.getPainter.bind(this)(),i);var t=(this.config.endPeriod-this.config.startPeriod)/this.config.repaintCount;setTimeout(this.animate.bind(this),this.config.repaintInterval,i+t)},s.prototype.configure=function(i){if(n(i)&&(i={}),this.config=i,n(i.id))throw"Illustration id is required, cannot be undefined!";if(n(i.width)&&(this.config.width=700),n(i.height)&&(this.config.height=700),n(i.traslateToX)&&(this.config.translateToX=this.config.width/2),n(i.traslateToY)&&(this.config.translateToY=this.config.height/2),n(i.is2d)&&(this.config.is2d=!0),n(i.isDynamic)&&(this.config.isDynamic=!1),this.config.isDynamic&&(n(i.startPeriod)&&(this.config.startPeriod=0),n(i.endPeriod)&&(this.config.endPeriod=4*Math.PI),n(i.repaintCount)&&(this.config.repaintCount=1e3),n(i.repaintInterval)&&(this.config.repaintInterval=10),n(i.loop)&&(this.config.loop=!1)),"function"!=typeof i.paint)throw"config.paint is expected as a function, cannot be other types!";this.isConfigured=!0},s.prototype.illustrate=function(){if(!this.isConfigured)throw"curves.configure must be called before this function.";this.config.canvas=document.getElementById(this.config.id),this.config.context=this.config.canvas.getContext(this.config.is2d?"2d":"webgl"),this.config.canvas.width=this.config.width,this.config.canvas.height=this.config.height,this.config.is2d&&this.config.context.translate(this.config.translateToX,this.config.translateToY),this.config.isDynamic?this.animate.bind(this)(this.config.startPeriod):this.config.paint(this.getPainter.bind(this)())};var a={configure:function(o){var e;if(n(o)||n(o.id))throw"config.id is required, cannot be undefined!";return n(i[o.id])?(e=new s,i[o.id]=e):e=i[o.id],0,t.push(o.id),e.configure(o),a},illustrate:function(){t.length>0&&i[t.shift()].illustrate()}};return a}();function examples(){curves.configure({id:"coinPath",isDynamic:!0,height:400,width:400,paint:function(i,t){var n=50;function o(t){i.configure({type:"original",strokeStyle:"#ff0000",radius:n,x:-2*n*Math.cos(t/2),y:-2*n*Math.sin(t/2)}).draw(i.shape.circle),i.configure({type:"original",strokeStyle:"#ff0000",fillStyle:"#ff0000",start:i.shape.cardioid.bind({config:{radius:n,alpha:-Math.PI/2,ratio:.5}})(t),end:i.shape.cardioid.bind({config:{radius:n,alpha:Math.PI/2,ratio:.5}})(t)}).draw(i.shape.arrow)}i.configure({type:"original",radius:n}).draw(i.shape.circle),t>=Math.PI&&o(Math.PI),t>=2*Math.PI&&o(2*Math.PI),t>=3*Math.PI&&o(3*Math.PI),o(t),i.configure({radius:n,alpha:Math.PI,endT:t}).draw(i.shape.cardioid);var e=i.shape.cardioid.bind({config:{radius:n,alpha:Math.PI}})(t);i.configure({type:"original",x:e.x,y:-e.y,radius:n,size:4,fillStyle:"#ff0000",strokeStyle:"#ff0000"}).draw(i.shape.point)}}).illustrate()}window.addEventListener("load",examples,!0);
